{"version":3,"file":"static/js/213.81c1419f.chunk.js","mappings":"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","sources":["component/Admin/NewProduct.jsx","../node_modules/@mui/icons-material/Collections.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport MetaData from \"../layouts/MataData/MataData\";\r\nimport Loader from \"../layouts/loader/Loader\";\r\nimport Sidebar from \"./Siderbar\";\r\nimport { createProduct, clearErrors } from \"../../actions/productAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NEW_PRODUCT_RESET } from \"../../constants/productsConstatns\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\n\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport useStyles from \"../User/LoginFromStyle\";\r\nimport {\r\n  Avatar,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nfunction NewProduct() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, success } = useSelector(\r\n    (state) => state.addNewProduct\r\n  );\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [Stock, setStock] = useState(0);\r\n  const [info, setInfo] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n  const [isCategory, setIsCategory] = useState(false);\r\n  const fileInputRef = useRef();\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const toggleHandler = () => {\r\n    setToggle(!toggle);\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value);\r\n    setIsCategory(true);\r\n  };\r\n\r\n  const handleImageUpload = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const categories = [\r\n    \"Cricket Kits\",\r\n    \"Batting Gloves\",\r\n    \"Batting Pads\",\r\n    \"Bats\",\r\n    \"Bags\",\r\n    \"Helmets\",\r\n    \"Balls\",\r\n    \"Stumps\",\r\n    \"Shoes\",\r\n    \"Clothing\",\r\n    \"Accessories\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Product Created Successfully\");\r\n      history.push(\"/admin/dashboard\");\r\n      dispatch({ type: NEW_PRODUCT_RESET });\r\n    }\r\n  }, [dispatch, alert, error, history, success]);\r\n\r\n  const createProductSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const myForm = new FormData();\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"price\", price);\r\n    myForm.set(\"description\", description);\r\n    myForm.set(\"category\", category);\r\n    myForm.set(\"Stock\", Stock);\r\n    myForm.set(\"info\", info);\r\n    images.forEach((currImg) => {\r\n      myForm.append(\"images\", currImg);\r\n    });\r\n\r\n    dispatch(createProduct(myForm));\r\n  };\r\n\r\n  const createProductImagesChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImagesPreview((old) => [...old, reader.result]);\r\n          setImages((old) => [...old, file]); // Store file objects instead of data URLs\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <MetaData title={\"New Product\"} />\r\n          <div className={classes.updateProduct}>\r\n            <div\r\n              className={\r\n                !toggle ? `${classes.firstBox1}` : `${classes.toggleBox1}`\r\n              }\r\n            >\r\n              <Sidebar />\r\n            </div>\r\n\r\n            <div className={classes.secondBox1}>\r\n              <div className={classes.navBar1}>\r\n                <Navbar toggleHandler={toggleHandler} />\r\n              </div>\r\n\r\n              <div\r\n                className={`${classes.formContainer} ${classes.formContainer2}`}\r\n              >\r\n                <form\r\n                  className={`${classes.form} ${classes.form2}`}\r\n                  encType=\"multipart/form-data\"\r\n                  onSubmit={createProductSubmitHandler}\r\n                >\r\n                  <Avatar className={classes.avatar}>\r\n                    <AddCircleOutlineIcon />\r\n                  </Avatar>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h1\"\r\n                    className={classes.heading}\r\n                  >\r\n                    Create Product\r\n                  </Typography>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    className={`${classes.nameInput} ${classes.textField}`}\r\n                    label=\"Product Name\"\r\n                    required\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <ShoppingCartOutlinedIcon\r\n                            style={{\r\n                              fontSize: 20,\r\n                              color: \"#414141\",\r\n                            }}\r\n                          />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Price\"\r\n                    value={price}\r\n                    required\r\n                    fullWidth\r\n                    className={`${classes.passwordInput} ${classes.textField}`}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment\r\n                          position=\"end\"\r\n                          style={{\r\n                            fontSize: 20,\r\n                            color: \"#414141\",\r\n                          }}\r\n                        >\r\n                          <AttachMoneyIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Stock\"\r\n                    value={Stock}\r\n                    required\r\n                    className={`${classes.passwordInput} ${classes.textField}`}\r\n                    onChange={(e) => setStock(e.target.value)}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment\r\n                          position=\"end\"\r\n                          style={{\r\n                            fontSize: 20,\r\n                            color: \"#414141\",\r\n                          }}\r\n                        >\r\n                          <StorageIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    label=\"Product info\"\r\n                    value={info}\r\n                    required\r\n                    className={`${classes.passwordInput} ${classes.textField}`}\r\n                    onChange={(e) => setInfo(e.target.value)}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment\r\n                          position=\"end\"\r\n                          style={{\r\n                            fontSize: 20,\r\n                            color: \"#414141\",\r\n                          }}\r\n                        >\r\n                          <InfoIcon />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n\r\n                  <div className={classes.selectOption}>\r\n                    {!isCategory && (\r\n                      <Typography variant=\"body2\" className={classes.labelText}>\r\n                        Choose Category\r\n                      </Typography>\r\n                    )}\r\n                    <FormControl className={classes.formControl}>\r\n                      <Select\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={category}\r\n                        onChange={handleCategoryChange}\r\n                        className={classes.select}\r\n                        inputProps={{\r\n                          name: \"category\",\r\n                          id: \"category-select\",\r\n                        }}\r\n                        MenuProps={{\r\n                          classes: {\r\n                            paper: classes.menu,\r\n                          },\r\n                          anchorOrigin: {\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"left\",\r\n                          },\r\n                          transformOrigin: {\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\",\r\n                          },\r\n                          getContentAnchorEl: null,\r\n                        }}\r\n                      >\r\n                        {!category && (\r\n                          <MenuItem value=\"\">\r\n                            <em>Choose Category</em>\r\n                          </MenuItem>\r\n                        )}\r\n                        {categories.map((cate) => (\r\n                          <MenuItem key={cate} value={cate}>\r\n                            {cate}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    className={classes.descriptionInput}\r\n                    label=\"Product Description\"\r\n                    multiline\r\n                    rows={1}\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <DescriptionIcon\r\n                            className={classes.descriptionIcon}\r\n                          />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n\r\n                  <div className={classes.root}>\r\n                    <div className={classes.imgIcon}>\r\n                      <CollectionsIcon\r\n                        fontSize=\"large\"\r\n                        style={{ fontSize: 40 }}\r\n                      />\r\n                    </div>\r\n\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"avatar\"\r\n                      className={classes.input}\r\n                      accept=\"image/*\"\r\n                      onChange={createProductImagesChange}\r\n                      multiple\r\n                      style={{ display: \"none\" }}\r\n                      ref={fileInputRef}\r\n                    />\r\n                    <label htmlFor=\"avatar-input\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.uploadAvatarButton}\r\n                        startIcon={\r\n                          <CloudUploadIcon\r\n                            style={{\r\n                              color: \"#FFFFFF\",\r\n                            }}\r\n                          />\r\n                        }\r\n                        onClick={handleImageUpload}\r\n                      >\r\n                        <p className={classes.uploadAvatarText}>\r\n                          Upload Images\r\n                        </p>\r\n                      </Button>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <Box className={classes.imageArea}>\r\n                    {imagesPreview &&\r\n                      imagesPreview.map((image, index) => (\r\n                        <img\r\n                          key={index}\r\n                          src={image}\r\n                          alt=\"Product Preview\"\r\n                          className={classes.image}\r\n                        />\r\n                      ))}\r\n                  </Box>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.loginButton}\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                    disabled={loading ? true : false}\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewProduct;\r\n\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4 2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z\"\n}), 'Collections');\nexports.default = _default;"],"names":["dispatch","useDispatch","history","useHistory","alert","useAlert","_useSelector","useSelector","state","addNewProduct","loading","error","success","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","price","setPrice","_useState5","_useState6","description","setDescription","_useState7","_useState8","category","setCategory","_useState9","_useState10","Stock","setStock","_useState11","_useState12","info","setInfo","_useState13","_useState14","images","setImages","_useState15","_useState16","imagesPreview","setImagesPreview","_useState17","_useState18","isCategory","setIsCategory","fileInputRef","useRef","_useState19","_useState20","toggle","setToggle","classes","useStyles","useEffect","clearErrors","push","type","NEW_PRODUCT_RESET","_jsx","_Fragment","children","Loader","_jsxs","MetaData","title","className","updateProduct","concat","toggleBox1","firstBox1","Sidebar","secondBox1","navBar1","Navbar","toggleHandler","formContainer","formContainer2","form","form2","encType","onSubmit","e","preventDefault","myForm","FormData","set","forEach","currImg","append","createProduct","Avatar","avatar","AddCircleOutlineIcon","Typography","variant","component","heading","TextField","fullWidth","nameInput","textField","label","required","value","onChange","target","InputProps","endAdornment","InputAdornment","position","ShoppingCartOutlinedIcon","style","fontSize","color","passwordInput","AttachMoneyIcon","StorageIcon","InfoIcon","selectOption","labelText","FormControl","formControl","Select","select","inputProps","id","MenuProps","paper","menu","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MenuItem","map","cate","descriptionInput","multiline","rows","DescriptionIcon","descriptionIcon","root","imgIcon","CollectionsIcon","input","accept","Array","from","files","file","reader","FileReader","onload","readyState","old","_toConsumableArray","result","readAsDataURL","multiple","display","ref","htmlFor","Button","uploadAvatarButton","startIcon","CloudUploadIcon","onClick","current","click","uploadAvatarText","Box","imageArea","image","index","src","alt","loginButton","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}